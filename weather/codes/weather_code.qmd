---
title: "Get Weather"
author: "Nicolas Giordano"
format: html
editor: visual
---

# Get Weather Summaries from API

Introduce some changes

This functions will allow you to:

-   Get weather summaries from different API

-   Summarize your weather data for different periods during the cropping season

-   Use Penmann - Montheith ecuation for estimation ET0 with the least data from MESONET

-   Plot your weather data
==
## Load Packages

```{r}
library(tidyverse) # Data Wrangling and iteration
#library(nasapower) # NASAPOWER API
#library(daymetr) # DAYMET API
library(lubridate) # For operation with dates
library(zoo) # For interpolation of missing values

## Load Custom functions
source("weather_functions.R")
```

## Create some example data

```{r}
df = 
data.frame(
  LOCATION = c("AB","AB","HUT","HUT"), 
  LOCATION_MESONET = c("Ashland%20Bottoms","Ashland%20Bottoms", "Hutchinson%2010SW","Hutchinson%2010SW"),
  ANTHESIS = c("05/12/2021","05/12/2021", "05/08/2021", "05/08/2021"), 
  SOWING = c("10/12/2020", "10/12/2020", "10/08/2020", "10/08/2020"), 
  HARVEST = c("07/10/2021","07/10/2021","06/25/2021", "06/25/2021"),
  GENOTYPE = c("Zenda","Larry", "Zenda", "Larry"), 
  MATURITY = c(10,-10, 10,-10), # RELATIVE ANTHESIS
  LAT = c(37.00,37.00, 37.20, 37.20), 
  ALT = c(300, 350)
)
df
```

## KS MESONET

***Kansas Mesonet, 2017: Kansas Mesonet Historical Data. Accessed DD MM YYYY, http://mesonet.k-state.edu/weather/historical***

Mesonet has a complex syntax on the URL to access. Getting weather data is subject to human error if we write this link manually.

Here is an example:

'https://mesonet.k-state.edu/rest/stationdata/?stn=Ashland%20Bottoms&int=day&t_start=20201013000000&t_end=20210621000000&vars=TEMP2MMIN,TEMP2MMAX,PRECIP,VPDEFAVG,SR,WSPD2MAVG,PRESSUREAVG'

```{r}
URL_ = "https://mesonet.k-state.edu/rest/stationdata/"
INTERVAL = "&int=day"
VARIABLES = "&vars=TEMP2MMIN,TEMP2MMAX,PRECIP,VPDEFAVG,SR,WSPD2MAVG,PRESSUREAVG"

# Run GET MESONET
# Make sure you have internet connection
df_mesonet = get_mesonet(df)
head(df_mesonet)


```

## Interpolation of missing values and ET0 estimation

For estimation of ET0 we use a custom function eto.penmon()

**Formula is based on:**

Step by Step Calculation of the Penman-Monteith Evapotranspiration (FAO-56 Method)1 Lincoln Zotarelli, Michael D. Dukes, Consuelo C. Romero, Kati W. Migliaccio, and Kelly T. Morgan

```{r}
df_interpol = 
df %>% 
  group_by(LOCATION, LAT, ALT, GENOTYPE, MATURITY) %>% 
  transmute_at(vars(ANTHESIS:HARVEST), ~as.Date(., format = '%m/%d/%Y')) %>% 
  ungroup() %>% 
  full_join(df_mesonet) %>% 
  unnest(mesonet) %>% 
  #separate(TIMESTAMP, into = c("YEAR", "MONTH", "DAY"), sep = "-", remove = FALSE) %>% 
  mutate(# Format Date-Time
         TIMESTAMP = as.Date(TIMESTAMP, format='%Y-%m-%d'),
         # Interpolation of missing values
         TEMP2MMIN = na.approx(TEMP2MMIN), 
         TEMP2MMAX = na.approx(TEMP2MMAX), 
         DOY = lubridate::yday(x = TIMESTAMP ), 
         
         PENMON_eto = eto.penmon(tmax = TEMP2MMAX, 
                          tmin = TEMP2MMIN,
                          wind_speed =  WSPD2MAVG, 
                          solar_radiation = SR,
                          atm_pr = PRESSUREAVG, 
                          doy = DOY,
                          lat = LAT,
                          sealvl = ALT,
                          vpd = VPDEFAVG)
  )
head(df_interpol)
```

# Weather summaries MESONET

```{r}
# Tbase instead of Tmin
# PQ corrected by VPD - Fernanda Dreccer
# Explain function arguments and output a little better
# Input -300 instead of 300
df_summaries = weather_summaries_MESONET(data = df_interpol,tminCP = 4.5, tminGF = 0,
                                         minGDU_CP = 300, maxGCU_CP = 100, 
                                         minGDU_GF = 100, maxGCU_GF = 600
                                         )

head(df_summaries)
```
