---
title: "Untitled"
format: html
editor: visual
---

```{r message = F, warning = F}
library(readxl)
library(tidyverse)
library(sf)
```

```{r}
# latitude
lldata <- tibble(lat=as.numeric(rep(seq(40,49.5),10)))


# Longitude + add data
lldata <- lldata %>%  
          group_by(lat) %>%  
          mutate(lon = -90 + row_number()-1,
                 data = runif(1))

#Plot the grid as points
lldata %>% 
  ggplot() + 
  geom_point(aes(x=lon,y=lat,color=data))

lldata <- tibble(lat = as.numeric(rep(seq(40, 49.5), 10))) %>%  
  group_by(lat) %>%  
  mutate(lon = -90 + row_number() - 1,
         data = runif(1)) %>% 
  ungroup() %>% 
  st_as_sf(coords = c("lon", "lat")) 

lldata_poly <- lldata %>% 
  st_make_grid(cellsize = 1, offset = c(-90.5, 39.5)) %>% 
  st_as_sf() %>% 
  st_join(lldata)

# plot
ggplot() +
  geom_sf(data = lldata_poly, aes(fill = data)) +
  geom_sf(data = lldata)

mapview::mapview(lldata_poly)

```

```{r}
plots <- read_xlsx("Plot map template.xlsx", range = "M1:AP53") 

plots_w <- plots %>% 
  filter_all(all_vars(str_detect(.,"-|FILL"))) %>% 
  pivot_longer(cols= c(...1:ncol(.)))
```

```{r}
# The field shape is needed to cut off lines within the shape of the field
field <- read_sf("boundary.shp")
# Create a line object in EPSG:4326
line <- st_transform(read_sf("linestring.shp"), crs = 3857)
line <- line$geometry
# Plot length
plot_length = 2*7.67/111320
# plot width
width <- 6*0.303
# Distance between field boundaries
passes <- 50
# Offset path
offset_path <- 0

nico <- parallel_lines(line, width, field, offset_path, passes = 50, clip = FALSE)
mapview::mapview(nico)
```



